version: '3.9'
services:
  python-scraper:
    image: python:3.11
    volumes:
      - ./src:/app
    working_dir: /app
    command: tail -f /dev/null  # Replace with 'python main.py' to run main
    tty: true

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: leads
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.retention.time=15d
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-provisioning-datasources.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    pid: host
    network_mode: host
    restart: unless-stopped
    command: ["--path.rootfs=/host"]
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  app-metrics:
    image: python:3.11
    volumes:
      - ./monitoring:/app
    working_dir: /app
    command: python -m http.server 8000  # Placeholder for real metrics endpoint
    ports:
      - "8000:8000"
    restart: unless-stopped

volumes:
  pgdata:
  grafana_data:
