Setup Instructions v1

🖥️ Environment Overview:
- I have **two devices**: an ASUS laptop and a Work Desktop.
- Both use **local Python scripts**, configured via `.env` files, and synced using **OneDrive**.
- I have a **unified folder structure** for automation scripts:
  C:/Users/[username]/OneDrive - Digital Age Marketing Group/Desktop/Local Py/Work Projects/bar-directory-recon

🗂️ Environment Variables:
- I use **two separate .env files**:
  - `.env.asus` → For ASUS laptop
  - `.env.work` → For Work Desktop
- The correct file is **automatically loaded** using `env_loader.py`, which detects the machine based on its hostname or username.
- Only one `.env` is loaded per execution (never both).

🔐 Authentication:
- Gmail authentication uses the **Gmail API with token.json** (no more `token.pickle`).
- The token is saved in a path defined in each `.env` file using `GMAIL_TOKEN_PATH`.

📬 Email Notifications:
- All email notifications are handled by `notifier.py`.
- The function used is `send_html_notification()`.
- It supports HTML formatting, and adapts to the current environment.

💻 Git Automation:
- I use:
  - `auto_git_commit.py` → Automatically commits to GitHub.
  - `git_commit_and_notify.py` → Commits + sends notification using the notifier.
- These scripts use the correct `.env` file and log to `.log` files (UTF-8).

📦 Central Logging:
- Log files (e.g., `git_commit.log`, `email_notifier.log`) are UTF-8 and saved in the synced OneDrive project folder.
- I can access and review them on either machine.

🔧 Motion App Integration:
- I’ve set up Ngrok + Flask API + Motion App API to allow local task creation (via `motion_task_creator.py`).
- Zapier is no longer used to create tasks. All integrations are now handled **locally** via Python scripts.

🛑 Deprecated / Do Not Use:
- `.env` (generic, old version)
- `token.pickle`
- `asus_notifier.py`, `work_notifier.py`
- `git_commit_and_notify_asus.py`, `git_commit_and_notify_work.py`

✅ Best Practices:
- Always use `env_loader.py` to determine environment.
- Only maintain one unified version of each core script.
- Keep `.env` files in the root of the project folder — not nested or renamed.
- Log everything — success and failure — for traceability.
