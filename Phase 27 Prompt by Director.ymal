#######################################################################
#  UNIVERSAL RECON – PHASE 27  |  DIRECTOR MASTER PLAYBOOK  v2025-05-01
#
#  Goal for this Copilot run
#  -------------------------
#  1. Final-verify environment & venv creation OUTSIDE OneDrive
#  2. Run pre-commit & pytest successfully
#  3. Generate risk_overlay.json for utah_bar
#  4. Commit/push the work on branch `chore/restore-hotfix-scripts`
#
#  Copilot: PLEASE execute each numbered SECTION completely before
#  moving to the next.  After all steps, post a MARKDOWN summary that
#  includes command output snippets (trimmed) and any errors.
#######################################################################

workspace_root: "C:\\Users\\samq\\repos\\bar-directory-recon"   # <- adjust if different

steps:

#### 1️⃣  Create a CLEAN venv outside OneDrive & activate
  - name: create_venv
    shell: |
      cd "%workspace_root%"
      python -m venv %USERPROFILE%\\venvs\\bar_recon27
      %USERPROFILE%\\venvs\\bar_recon27\\Scripts\\activate

#### 2️⃣  Upgrade pip & install project (+[test]) deps
  - name: install_deps
    shell: |
      python -m pip install --upgrade pip
      pip install -e .[test]

#### 3️⃣  Pre-commit diagnostics (hooks already patched)
  - name: precommit
    shell: |
      pre-commit --version
      pre-commit run --all-files --show-diff-on-failure

#### 4️⃣  Pytest with DEBUG collection
  - name: pytest
    shell: |
      pytest -vv --collect-only
      pytest -vv -q

#### 5️⃣  Generate risk_overlay.json for `utah_bar`
  - name: emit_risk_overlay
    shell: |
      python - << "PY"
      from universal_recon.analytics.risk_overlay_emitter import RiskOverlayEmitter
      import json, pathlib, yaml
      tiers = yaml.safe_load(open("universal_recon/validators/validator_tiers.yaml"))
      emitter = RiskOverlayEmitter(tiers["validator_tiers"])
      emitter.emit_risk_overlay()
      print("Generated:", pathlib.Path("output/risk_overlay.json").resolve())
      PY

#### 6️⃣  Stage hot-fix files & risk overlay emitter/test assets
  - name: git_stage
    shell: |
      git add universal_recon/plugin_aggregator.py ^
              universal_recon/plugin_registry.json ^
              universal_recon/analytics/site_schema_collector.py ^
              universal_recon/analytics/schema_score_linter.py ^
              universal_recon/analytics/schema_matrix_collector.py ^
              universal_recon/analytics/domain_anomaly_flagger.py ^
              universal_recon/analytics/plugin_usage_diff.py ^
              universal_recon/analytics/risk_overlay_emitter.py ^
              universal_recon/validators/validator_tiers.yaml ^
              universal_recon/tests/**/*.py ^
              pyproject.toml .pre-commit-config.yaml .env
      git status -s

#### 7️⃣  Commit WITHOUT pre-commit hook, then push
  - name: git_commit_push
    shell: |
      git commit -m "feat: Phase-27 env + risk overlay & tests" --no-verify
      git push origin chore/restore-hotfix-scripts --force-with-lease

success_criteria:
  - pre-commit exits 0 (or only warns about mypy being disabled)
  - pytest discovers ≥1 test and exits 0
  - output/risk_overlay.json exists
  - git push succeeds

#######################################################################
