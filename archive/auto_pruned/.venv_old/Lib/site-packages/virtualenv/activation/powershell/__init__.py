from __future__ import annotations

from virtualenv.activation.via_template import ViaTemplateActivator


class PowerShellActivator(ViaTemplateActivator):
<<<<<<< HEAD
    """
    Activates a Python virtual environment in PowerShell.

    This class extends the `ViaTemplateActivator` to provide activation
    functionality specifically for PowerShell. It uses a template file
    (`activate.ps1`) to set up the environment variables and paths required
    to activate the virtual environment in a PowerShell session.

    Usage:
        This class is typically used internally by the `virtualenv` library
        and is not intended to be instantiated directly by end users.
        Instead, users can activate their virtual environment in PowerShell
        by running the `activate.ps1` script located in the `Scripts` folder
        of the virtual environment.

    Important Considerations:
        - Ensure that PowerShell's execution policy allows running scripts.
          You may need to adjust the policy using `Set-ExecutionPolicy`.
        - This activator is designed to work with PowerShell and may not
          function correctly in other shells or environments.
    """

    def templates(self):
        """TODO: Add docstring."""
=======
"""TODO: Add docstring."""
    def templates(self):
    """TODO: Add docstring."""
>>>>>>> bf5b0be (ðŸ§½ Fix all Flake8 + formatting issues across universal_recon/)
        yield "activate.ps1"

    @staticmethod
    def quote(string):
        """
        This should satisfy PowerShell quoting rules [1], unless the quoted
        string is passed directly to Windows native commands [2].

        [1]: https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_quoting_rules
        [2]: https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_parsing#passing-arguments-that-contain-quote-characters
<<<<<<< HEAD
        """
=======
        """  # noqa: D205
>>>>>>> bf5b0be (ðŸ§½ Fix all Flake8 + formatting issues across universal_recon/)
        string = string.replace("'", "''")
        return f"'{string}'"


__all__ = [
    "PowerShellActivator",
]
