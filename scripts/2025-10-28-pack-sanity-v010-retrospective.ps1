# file: scripts/2025-10-28-pack-sanity-v010-retrospective.ps1
# Purpose: Retrospective pack sanity for v0.1.0 (pre-cli-pack workflow era)
#          Since cli-pack.yml was added AFTER v0.1.0, we build locally from tag and document
#          the situation for future releases.

Set-StrictMode -Version Latest
$ErrorActionPreference = 'Stop'
function Say($m){ Write-Host "==> $m" -ForegroundColor Cyan }

$REPO = "C:\Code\bar-directory-recon"
if(!(Test-Path $REPO)){ throw "Repo not found: $REPO" }
Set-Location $REPO

$tag = "v0.1.0"

Say "Pack Sanity Retrospective for $tag"
Say "NOTE: cli-pack workflow was added AFTER v0.1.0 release (PR #295)"
Say ""

# Check if cli-pack exists on the tag
Say "Checking if cli-pack.yml exists on $tag..."
$workflowExists = $false
try {
  gh api "repos/samiat-quadir/bar-directory-recon/contents/.github/workflows/cli-pack.yml?ref=$tag" *> $null
  $workflowExists = $true
} catch {
  $workflowExists = $false
}

Say "cli-pack.yml on $tag : $workflowExists"
Say ""

# Check release assets
Say "Checking release assets for $tag..."
$assets = gh api "repos/samiat-quadir/bar-directory-recon/releases/tags/$tag" -q '.assets[].name' 2>$null
if($assets){
  Say "Found assets:"
  $assets | ForEach-Object { Say "  - $_" }
} else {
  Say "No assets attached to $tag release"
}
Say ""

# Build locally from tag for comparison
Say "Building package locally from $tag source..."
git fetch origin --prune --quiet
git checkout -q $tag

# Clean and build
if(Test-Path "dist"){ Remove-Item -Recurse -Force "dist" }
& python -m pip install -U pip build --quiet
& python -m build

$localWhl = Get-ChildItem dist\*.whl | Select-Object -First 1
$localTar = Get-ChildItem dist\*.tar.gz | Select-Object -First 1

if($localWhl){
  $whlHash = (Get-FileHash -Algorithm SHA256 $localWhl.FullName).Hash.ToLower()
  Say "Local build completed:"
  Say "  Wheel: $($localWhl.Name)"
  Say "  SHA256: $whlHash"
}

if($localTar){
  $tarHash = (Get-FileHash -Algorithm SHA256 $localTar.FullName).Hash.ToLower()
  Say "  Tarball: $($localTar.Name)"
  Say "  SHA256: $tarHash"
}
Say ""

# Create documentation
$md = @"
# Release QA â€” $tag (Retrospective)

## Context

Version **$tag** was released **before** the ``cli-pack`` workflow was introduced (PR #295, merged Oct 27).
Therefore, no workflow artifacts exist for comparison.

## Retrospective Build

A local build from the $tag source was performed to document baseline hashes:

| Artifact | SHA256 (local build from tag) |
|---|---|
| $($localWhl.Name) | $whlHash |
| $($localTar.Name) | $tarHash |

## Release Assets Status

$( if($assets){ "The following assets were attached to the $tag release:`n`n" + ($assets | ForEach-Object { "- $_" } | Join-String -Separator "`n") } else { "No assets were attached to the $tag release." } )

## Recommendations

1. **Future Releases**: Use ``cli-pack`` workflow (manual dispatch or release trigger) to build and attach wheel/sdist
2. **Current State**: cli-pack.yml is available on ``main`` with ``workflow_dispatch`` trigger
3. **Next Release**: Follow ``docs/release-playbook.md`` for complete pack sanity verification

## Notes

- This is a **retrospective analysis** since cli-pack didn't exist at $tag release time
- Future releases (v0.1.1+) will have full workflow artifact vs release asset parity checks
- See ``scripts/2025-10-28-pack-sanity-v010.ps1`` for the standard pack sanity procedure (requires cli-pack workflow)

_Generated by ``scripts/2025-10-28-pack-sanity-v010-retrospective.ps1`` on $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')_
"@

# Ensure docs directory exists
if(!(Test-Path "docs")){ New-Item -ItemType Directory -Path "docs" | Out-Null }

# Write the documentation
[IO.File]::WriteAllText("$REPO\docs\RELEASE_QA.md", $md, [Text.UTF8Encoding]::new($false))
Say "Documentation written to docs\RELEASE_QA.md"
Say ""

# Create PR
git checkout -q main
git reset --hard origin/main --quiet
$branch = "docs/release-qa-$tag-retrospective-$(Get-Date -Format yyyyMMddHHmmss)"
git checkout -b $branch

git add docs\RELEASE_QA.md
if(git diff --cached --quiet){
  Say "No changes to commit"
} else {
  git commit -m "docs: add retrospective Release QA for $tag (pre-cli-pack era)" --quiet
  git push --set-upstream origin $branch --quiet
  
  $prBody = @"
Adds retrospective pack sanity documentation for $tag.

**Context**: The ``cli-pack`` workflow (PR #295) was added **after** v0.1.0 was released, so no workflow artifacts exist for comparison.

**This PR**:
- Documents local build hashes from $tag source
- Notes that no assets were attached to the release
- Provides recommendations for future releases

**Impact**: Docs-only, no workflow or policy changes.
"@

  gh pr create --title "docs: Retrospective Release QA for $tag" `
    --body $prBody `
    --base main --head $branch | Out-Null
    
  gh pr merge --squash --auto | Out-Null
  Say "Draft PR created and auto-merge enabled"
}

Write-Host ""
Write-Host "RELAY >> task=pack_sanity_retrospective status=ok tag=$tag note=""Retrospective analysis complete; cli-pack added after v0.1.0"" workflow_existed=$workflowExists assets_count=$($assets.Count)" -ForegroundColor Green
