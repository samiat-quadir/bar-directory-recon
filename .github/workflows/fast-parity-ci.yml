name: fast-parity-ci
on:
  pull_request:
    paths: ['requirements*', '.github/workflows/**', 'src/**', 'tests/**']
  push:
    branches: [main]
    paths: ['requirements*', '.github/workflows/**', 'src/**', 'tests/**']
  workflow_dispatch:

jobs:
  ubuntu-fast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-lock.txt', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies (prefer lockfile)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-lock.txt ]; then
            echo "Using requirements-lock.txt (pinned versions)"
            python -m pip install -r requirements-lock.txt
          elif [ -f requirements.txt ]; then
            echo "Using requirements.txt (flexible versions)"
            python -m pip install -r requirements.txt
          else
            echo "No requirements file found, installing minimal deps"
            python -m pip install pytest
          fi
      - name: Run fast tests
        run: python -m pytest -v --tb=short

  windows-fast:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-lock.txt', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies (prefer lockfile)
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements-lock.txt) {
            Write-Host "Using requirements-lock.txt (pinned versions)"
            python -m pip install -r requirements-lock.txt
          } elseif (Test-Path requirements.txt) {
            Write-Host "Using requirements.txt (flexible versions)"
            python -m pip install -r requirements.txt
          } else {
            Write-Host "No requirements file found, installing minimal deps"
            python -m pip install pytest
          }
      - name: Run fast tests
        run: python -m pytest -v --tb=short