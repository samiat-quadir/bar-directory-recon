name: CI Pipeline

on:
  push:
    branches: [ "main", "feature/**", "prep/**" ]
  pull_request:
    branches: [ "main", "feature/**", "prep/**" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read    # allow read access to code
  packages: write   # (if publishing packages to GitHub Packages; adjust as needed)
  # Add any other permissions if required for specific actions (e.g., `issues: write` for issue ops)

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"          # Cache pip dependencies

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Tests and Coverage
        run: |
          pytest --junitxml=pytest-report.xml --cov-report=xml --cov=.
        # The above generates pytest-report.xml and coverage.xml files

      # Upload artifact: PyTest results
      - name: ðŸ“¦ Upload PyTest Report
        if: always()   # run even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: pytest-report.xml

      # Upload artifact: Coverage report
      - name: ðŸ“¦ Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml      # Upload any logs or JSON outputs from tools
      - name: ðŸ“¦ Upload Logs and JSON
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-and-json
          path: |
            **/*.log
            **/*.json
  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v0.')

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
