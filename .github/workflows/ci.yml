name: ci
on:
  pull_request:
  push:
    branches: [main]
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install pytest and test dependencies
        run: |
          pip install pytest pytest-cov
          pip list | grep pytest
        
      - name: Install Dependencies
        run: pip install -r requirements-dev.txt

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

      - name: Type check with mypy
        run: mypy . --ignore-missing-imports

      - name: Run Tests and Coverage
        shell: bash
        run: |
          # Display Python and pip information
          python --version
          pip --version
          pip list
          # Make sure pytest is found
          python -c "import pytest; print(f'pytest version: {pytest.__version__}')"
          # Run tests with the python -m syntax to ensure correct module resolution
          python -m pytest -v --cov=src --cov=universal_recon --cov-report=xml --cov-report=term-missing --cov-fail-under=35
          
      - name: Fast pytest subset
        shell: bash
        run: |
          # Ensure pytest is in PATH and working
          python -m pytest -p no:cacheprovider -o addopts="" -k "not slow and not e2e and not integration" -q

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

      - name: Security scan
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
        run: python tools/secrets_scan.py --path . --report-path security_check.json

