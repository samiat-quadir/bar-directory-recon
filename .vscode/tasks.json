{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "docker-build",
			"type": "docker-build",
			"platform": "python",
			"dockerBuild": {
				"tag": "bardirectoryrecon:latest",
				"dockerfile": "${workspaceFolder}/Dockerfile",
				"context": "${workspaceFolder}",
				"pull": true
			}
		},
		{
			"label": "docker-run: debug",
			"type": "docker-run",
			"dependsOn": [
				"docker-build"
			],
			"python": {
				"file": "src\\universal_recon.py"
			}
		},
		{
			"label": "Activate .venv311 (samqu)",
			"type": "shell",
			"command": "${workspaceFolder}\\.venv311\\Scripts\\Activate.ps1",
			"options": {
				"shell": {
					"executable": "powershell.exe",
					"args": [
						"-ExecutionPolicy",
						"Bypass"
					]
				}
			},
			"problemMatcher": [],
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			}
		},
		{
			"label": "Dependency Check",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"-m",
				"safety",
				"check"
			],
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Run Tests",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"-m",
				"pytest",
				"-v",
				"--cov=src",
				"--cov=universal_recon",
				"--cov-report=html"
			],
			"group": {
				"kind": "test",
				"isDefault": true
			},
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Activate venv311",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"tools/activate_venv.ps1"
			],
			"problemMatcher": [],
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},
		{
			"label": "Switch to ASUS Profile",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/resolve_device_profile.py",
				"asus"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Switch to Work Profile",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/resolve_device_profile.py",
				"work"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Auto-Detect and Apply Profile",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/resolve_device_profile.py"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Apply Device Profile",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/resolve_device_profile.py"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Sync .env File (Auto)",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/sync_env.py"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Dry-Run .env Sync",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/sync_env.py",
				"--dry-run",
				"--verbose"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Update GitMo Task Progress",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/update_tracker_gitmo.py",
				"${input:taskIndex}"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Update Python Task Progress",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/update_tracker_python.py",
				"${input:taskIndex}"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Update ADA Task Progress",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/update_tracker_ada.py",
				"${input:taskIndex}"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Update Claude Task Progress",
			"type": "shell",
			"command": "${config:python.defaultInterpreterPath}",
			"args": [
				"tools/update_tracker_claude.py",
				"${input:taskIndex}"
			],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		}
	],
	"inputs": [
		{
			"id": "taskIndex",
			"description": "Task index number to update",
			"default": "1",
			"type": "promptString"
		}
	]
}
